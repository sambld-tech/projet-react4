[{"/Users/Sam/Desktop/React-workshop-main/src/components/UserProfile.tsx":"1","/Users/Sam/Desktop/projet-react4/src/index.tsx":"2","/Users/Sam/Desktop/projet-react4/src/reportWebVitals.ts":"3","/Users/Sam/Desktop/projet-react4/src/App.tsx":"4","/Users/Sam/Desktop/projet-react4/src/components/UserProfile.tsx":"5","/Users/Sam/Desktop/projet-react4/src/components/PostsList.tsx":"6","/Users/Sam/Desktop/projet-react4/src/components/AllUsers.tsx":"7","/Users/Sam/Desktop/projet-react4/src/components/EditPost.tsx":"8","/Users/Sam/Desktop/projet-react4/src/private/Header.tsx":"9","/Users/Sam/Desktop/projet-react4/src/components/PostItem.tsx":"10","/Users/Sam/Desktop/projet-react4/src/components/UserItem.tsx":"11","/Users/Sam/Desktop/projet-react4/src/private/Field.tsx":"12","/Users/Sam/Desktop/projet-react4/src/api/user.ts":"13","/Users/Sam/Desktop/projet-react4/src/api/post.ts":"14","/Users/Sam/Desktop/projet-react4/src/components/ImageGalleryPicker.tsx":"15","/Users/Sam/Desktop/projet-react4/src/private/SelectedImage.tsx":"16","/Users/Sam/Desktop/projet-react4/src/private/Checkmark.tsx":"17","/Users/Sam/Desktop/projet-react4/src/api/photo.ts":"18"},{"size":1142,"mtime":1649028520000,"results":"19","hashOfConfig":"20"},{"size":500,"mtime":1649028520000,"results":"21","hashOfConfig":"22"},{"size":425,"mtime":1649028520000,"results":"23","hashOfConfig":"22"},{"size":850,"mtime":1649028520000,"results":"24","hashOfConfig":"22"},{"size":1142,"mtime":1649028520000,"results":"25","hashOfConfig":"22"},{"size":1197,"mtime":1649665058624,"results":"26","hashOfConfig":"22"},{"size":1303,"mtime":1649672683178,"results":"27","hashOfConfig":"22"},{"size":7004,"mtime":1649754088868,"results":"28","hashOfConfig":"22"},{"size":1617,"mtime":1649028520000,"results":"29","hashOfConfig":"22"},{"size":1732,"mtime":1649667515426,"results":"30","hashOfConfig":"22"},{"size":1075,"mtime":1649747768185,"results":"31","hashOfConfig":"22"},{"size":336,"mtime":1649028520000,"results":"32","hashOfConfig":"22"},{"size":588,"mtime":1649671130053,"results":"33","hashOfConfig":"22"},{"size":1496,"mtime":1649669792013,"results":"34","hashOfConfig":"22"},{"size":2889,"mtime":1649750611710,"results":"35","hashOfConfig":"22"},{"size":2684,"mtime":1649028520000,"results":"36","hashOfConfig":"22"},{"size":846,"mtime":1649028520000,"results":"37","hashOfConfig":"22"},{"size":632,"mtime":1649748190120,"results":"38","hashOfConfig":"22"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"udjpt2",{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"19z9ky8",{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/Sam/Desktop/React-workshop-main/src/components/UserProfile.tsx",["95","96"],[],"/Users/Sam/Desktop/projet-react4/src/index.tsx",[],[],"/Users/Sam/Desktop/projet-react4/src/reportWebVitals.ts",[],[],"/Users/Sam/Desktop/projet-react4/src/App.tsx",[],[],"/Users/Sam/Desktop/projet-react4/src/components/UserProfile.tsx",["97","98"],[],"/Users/Sam/Desktop/projet-react4/src/components/PostsList.tsx",["99"],[],"/Users/Sam/Desktop/projet-react4/src/components/AllUsers.tsx",["100","101"],[],"/Users/Sam/Desktop/projet-react4/src/components/EditPost.tsx",["102","103","104","105"],[],"import React, { useEffect, useReducer, useState } from 'react'\nimport { Link, useNavigate, useParams } from 'react-router-dom'\nimport { getPost, getPosts } from '../api/post'\nimport { Picker_Picture, Post, PostContent, User } from '../api/types'\nimport { getAllUser } from '../api/user'\nimport Field from '../private/Field'\nimport ImageGalleryPicker from './ImageGalleryPicker'\n\ntype FormEvent =\n    | React.ChangeEvent<HTMLTextAreaElement>\n    | React.ChangeEvent<HTMLInputElement>\n    | React.ChangeEvent<HTMLSelectElement>\n\ntype FormData = { name: string; value: string | number | undefined }\n\nconst formReducer = (state: Post | PostContent, event: FormData) => {\n    return {\n        ...state,\n        [event.name]: event.value,\n    }\n}\n\nconst EditPost = () => {\n    const [users, setUsers] = useState<Array<User>>([])\n    const [showPictureModal, setShowPictureModal] = useState<boolean>(false)\n    const [formData, setFormData] = useReducer(\n        formReducer,\n        {} as Post | PostContent\n    )\n    let { id } = useParams() // post id from url\n    const navigate = useNavigate() // create a navigate function instance\n\n    async function _getPost(id: number){  \n        const data = await getPost(id);\n        convertToFormData(data);\n    }\n\n    useEffect(() => {\n        _getPost(Number(id));\n    }, [id]);\n\n    async function _getUsers(){\n        const data = await getAllUser();\n        setUsers(data);\n    }\n\n    useEffect(() => {\n        _getUsers();\n    }, []);\n\n    function handleModalPictureSubmit(picture: Picker_Picture) {\n        setFormData({\n            name: 'postImageUrl',\n            value: picture.src,\n        })\n    }\n\n    async function handleAddOrCreatePost(\n        event: React.FormEvent<HTMLFormElement>\n    ) {\n        // remove default reloading page\n        event.preventDefault()\n\n        // back to Home\n        navigate('/')\n    }\n\n    async function handleDeletePost() {\n        // back to Home\n        navigate('/')\n    }\n\n    function handleChange(event: FormEvent) {\n        //\n        const value =\n            event.target.name === 'userId'\n                ? Number(event.target.value)\n                : event.target.value\n        setFormData({\n            name: event.target.name,\n            value,\n        })\n    }\n\n    function convertToFormData(post: Post): void {\n        // helper to convert post data into formData\n        // use it before set formData with API data\n        // ex: convertToFormData(data):\n        ;(Object.keys(post) as Array<keyof typeof post>).map((key) => {\n            setFormData({\n                name: key,\n                value: post[key],\n            })\n        })\n    }\n\n    function handleToggleModal() {\n        // Show & Hide picture modal\n        setShowPictureModal((s) => !s)\n    }\n\n    function getSelectedPicture() {\n        // prevent bad request and use a placeholder if no data\n        if (formData.postImageUrl) {\n            return formData.postImageUrl\n        } else {\n            return 'https://via.placeholder.com/320/810b14'\n        }\n    }\n\n    function getSelectedAuthor() {\n        // prevent bad request and use a placeholder if no data\n        if (formData.userId) {\n            // [WORK]\n            // You need to find the author name with the server\n            return formData.userId\n        } else {\n            return 'Unknown author'\n        }\n    }\n\n    return (\n        <>\n            <form className=\"post-form\" onSubmit={handleAddOrCreatePost}>\n                <Field label=\"Title\">\n                    <input\n                        onBlur={handleChange}\n                        name=\"title\"\n                        className=\"input\"\n                        type=\"text\"\n                        placeholder=\"Text input\"\n                        onChange={handleChange}\n                        value={formData.title}\n                    />\n                </Field>\n                <Field label=\"Content\">\n                    <textarea\n                        onBlur={handleChange}\n                        name=\"body\"\n                        className=\"textarea\"\n                        placeholder=\"e.g. Hello world\"\n                        onChange={handleChange}\n                        value={formData.body}\n                    />\n                </Field>\n                <Field label=\"Post creator\">\n                    {!!!id ? (\n                        <div className=\"select\" defaultValue={formData.userId}>\n                            {users.length > 0 && (\n                                <select\n                                    name=\"userId\"\n                                    onChange={handleChange}\n                                    defaultValue={users[0].id}\n                                >\n                                    {users.map((user) => (\n                                        <option key={user.id} value={user.id}>\n                                            {user.name}\n                                        </option>\n                                    ))}\n                                </select>\n                            )}\n                        </div>\n                    ) : (\n                        <label>{getSelectedAuthor()}</label>\n                    )}\n                </Field>\n\n                <Field label=\"Post Picture\">\n                    <input type=\"hidden\" value=\"1\" name=\"postImageID\" />\n                    <div>\n                        <img src={getSelectedPicture()} />\n                        <button\n                            type=\"button\"\n                            className=\"button is-primary\"\n                            onClick={handleToggleModal}\n                        >\n                            Open picker modal\n                        </button>\n                    </div>\n                </Field>\n\n                {!!id && (\n                    <Field label=\"Extra actions\">\n                        <button\n                            type=\"button\"\n                            className=\"button is-warning\"\n                            onClick={handleDeletePost}\n                        >\n                            Delete post\n                        </button>\n                    </Field>\n                )}\n\n                <div className=\"field is-grouped is-grouped-centered\">\n                    <p className=\"control\">\n                        <button type=\"submit\" className=\"button is-primary\">\n                            Submit\n                        </button>\n                    </p>\n                    <p className=\"control\">\n                        <Link to=\"/\" className=\"button is-light\">\n                            Cancel\n                        </Link>\n                    </p>\n                </div>\n            </form>\n            {showPictureModal && (\n                <ImageGalleryPicker\n                    onClose={handleToggleModal}\n                    onSubmit={handleModalPictureSubmit}\n                />\n            )}\n        </>\n    )\n}\n\nexport default EditPost","/Users/Sam/Desktop/projet-react4/src/private/Header.tsx",["106","107","108"],[],"/Users/Sam/Desktop/projet-react4/src/components/PostItem.tsx",["109","110"],[],"/Users/Sam/Desktop/projet-react4/src/components/UserItem.tsx",["111"],[],"/Users/Sam/Desktop/projet-react4/src/private/Field.tsx",[],[],"/Users/Sam/Desktop/projet-react4/src/api/user.ts",[],[],"/Users/Sam/Desktop/projet-react4/src/api/post.ts",["112","113"],[],"/Users/Sam/Desktop/projet-react4/src/components/ImageGalleryPicker.tsx",[],[],["114","115"],"/Users/Sam/Desktop/projet-react4/src/private/SelectedImage.tsx",["116"],[],"/Users/Sam/Desktop/projet-react4/src/private/Checkmark.tsx",[],[],"/Users/Sam/Desktop/projet-react4/src/api/photo.ts",[],[],{"ruleId":"117","severity":1,"message":"118","line":7,"column":20,"nodeType":"119","messageId":"120","endLine":7,"endColumn":29},{"ruleId":"117","severity":1,"message":"121","line":9,"column":11,"nodeType":"119","messageId":"120","endLine":9,"endColumn":13},{"ruleId":"117","severity":1,"message":"118","line":7,"column":20,"nodeType":"119","messageId":"120","endLine":7,"endColumn":29},{"ruleId":"117","severity":1,"message":"121","line":9,"column":11,"nodeType":"119","messageId":"120","endLine":9,"endColumn":13},{"ruleId":"117","severity":1,"message":"122","line":8,"column":21,"nodeType":"119","messageId":"120","endLine":8,"endColumn":31},{"ruleId":"117","severity":1,"message":"123","line":1,"column":10,"nodeType":"119","messageId":"120","endLine":1,"endColumn":33},{"ruleId":"117","severity":1,"message":"122","line":11,"column":21,"nodeType":"119","messageId":"120","endLine":11,"endColumn":31},{"ruleId":"117","severity":1,"message":"124","line":3,"column":19,"nodeType":"119","messageId":"120","endLine":3,"endColumn":27},{"ruleId":"125","severity":1,"message":"126","line":40,"column":8,"nodeType":"127","endLine":40,"endColumn":12,"suggestions":"128"},{"ruleId":"129","severity":1,"message":"130","line":89,"column":68,"nodeType":"131","messageId":"132","endLine":89,"endColumn":70},{"ruleId":"133","severity":1,"message":"134","line":171,"column":25,"nodeType":"135","endLine":171,"endColumn":59},{"ruleId":"136","severity":1,"message":"137","line":8,"column":17,"nodeType":"135","endLine":8,"endColumn":53},{"ruleId":"133","severity":1,"message":"134","line":9,"column":21,"nodeType":"135","endLine":9,"endColumn":48},{"ruleId":"136","severity":1,"message":"138","line":11,"column":17,"nodeType":"135","endLine":17,"endColumn":18},{"ruleId":"117","severity":1,"message":"118","line":6,"column":20,"nodeType":"119","messageId":"120","endLine":6,"endColumn":29},{"ruleId":"139","severity":1,"message":"140","line":13,"column":25,"nodeType":"135","endLine":19,"endColumn":27},{"ruleId":"117","severity":1,"message":"141","line":1,"column":17,"nodeType":"119","messageId":"120","endLine":1,"endColumn":25},{"ruleId":"117","severity":1,"message":"142","line":2,"column":8,"nodeType":"119","messageId":"120","endLine":2,"endColumn":13},{"ruleId":"117","severity":1,"message":"143","line":3,"column":10,"nodeType":"119","messageId":"120","endLine":3,"endColumn":29},{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","replacedBy":"147"},{"ruleId":"133","severity":1,"message":"134","line":86,"column":13,"nodeType":"135","endLine":94,"endColumn":15},"@typescript-eslint/no-unused-vars","'setAuthor' is assigned a value but never used.","Identifier","unusedVar","'id' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'UseScrollTriggerOptions' is defined but never used.","'getPosts' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: '_getPost'. Either include it or remove the dependency array.","ArrayExpression",["148"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'useState' is defined but never used.","'axios' is defined but never used.","'responsiveFontSizes' is defined but never used.","no-native-reassign",["149"],"no-negated-in-lhs",["150"],{"desc":"151","fix":"152"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [_getPost, id]",{"range":"153","text":"154"},[1314,1318],"[_getPost, id]"]