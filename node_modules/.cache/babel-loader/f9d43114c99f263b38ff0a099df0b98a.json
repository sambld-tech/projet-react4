{"ast":null,"code":"import axios from 'axios';\nconst base_url = 'http://localhost:3004/posts';\n\nasync function getPost(postID) {\n  // get a unique post\n  // [TODO] remove this return to use a fetch API\n  const response = await fetch(`${base_url}/${postID}`);\n  const data = await response.json();\n  return data;\n}\n\nasync function getPosts() {\n  // get all posts\n  // [TODO] remove this return to use a fetch API\n  const response = await fetch(base_url);\n  const data = await response.json();\n  return data;\n}\n\nasync function createPost(post) {\n  // create a new post\n  // [TODO] remove this return to use a fetch API\n  const {\n    data\n  } = await axios(base_url);\n}\n\nasync function updatePost(post) {\n  // update a existing post\n  // [TODO] remove this return to use a fetch API\n  return {\n    id: 1,\n    title: 'title',\n    userId: 1,\n    body: 'body',\n    postImageUrl: 'https://picsum.photos/1280/960'\n  };\n}\n\nasync function deletePost(postID) {\n  // delete a existing post\n  // [TODO] remove this return to use a fetch API\n  return 1;\n}\n\nexport { getPost, getPosts, deletePost, updatePost, createPost };","map":{"version":3,"sources":["/Users/Sam/Desktop/projet-react4/src/api/post.ts"],"names":["axios","base_url","getPost","postID","response","fetch","data","json","getPosts","createPost","post","updatePost","id","title","userId","body","postImageUrl","deletePost"],"mappings":"AACA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,MAAMC,QAAQ,GAAG,6BAAjB;;AAGA,eAAeC,OAAf,CAAuBC,MAAvB,EAA0D;AACtD;AACA;AAEA,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEJ,QAAS,IAAGE,MAAO,EAAvB,CAA5B;AACA,QAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AAEA,SAAOD,IAAP;AAEH;;AAED,eAAeE,QAAf,GAAgD;AAC5C;AACA;AAEA,QAAMJ,QAAQ,GAAG,MAAMC,KAAK,CAACJ,QAAD,CAA5B;AACA,QAAMK,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AAGA,SAAOD,IAAP;AAEH;;AAED,eAAeG,UAAf,CAA0BC,IAA1B,EAA4D;AACxD;AACA;AAEA,QAAM;AAACJ,IAAAA;AAAD,MAAS,MAAMN,KAAK,CAACC,QAAD,CAA1B;AAEH;;AAED,eAAeU,UAAf,CAA0BD,IAA1B,EAAqD;AACjD;AACA;AACA,SAAO;AACHE,IAAAA,EAAE,EAAE,CADD;AAEHC,IAAAA,KAAK,EAAE,OAFJ;AAGHC,IAAAA,MAAM,EAAE,CAHL;AAIHC,IAAAA,IAAI,EAAE,MAJH;AAKHC,IAAAA,YAAY,EAAE;AALX,GAAP;AAOH;;AAED,eAAeC,UAAf,CAA0Bd,MAA1B,EAAmE;AAC/D;AACA;AACA,SAAO,CAAP;AACH;;AAED,SAASD,OAAT,EAAkBM,QAAlB,EAA4BS,UAA5B,EAAwCN,UAAxC,EAAoDF,UAApD","sourcesContent":["import { Post, PostContent } from './types'\nimport axios from 'axios'\nimport { responsiveFontSizes } from '@mui/material'\n\nconst base_url = 'http://localhost:3004/posts'\n\n\nasync function getPost(postID: Post['id']): Promise<Post> {\n    // get a unique post\n    // [TODO] remove this return to use a fetch API\n   \n    const response = await fetch(`${base_url}/${postID}`)\n    const data = await response.json()\n\n    return data\n    \n}\n\nasync function getPosts(): Promise<Array<Post>> {\n    // get all posts\n    // [TODO] remove this return to use a fetch API\n    \n    const response = await fetch(base_url)\n    const data = await response.json()\n\n\n    return data\n\n}\n\nasync function createPost(post: PostContent): Promise<Post> {\n    // create a new post\n    // [TODO] remove this return to use a fetch API\n    \n    const {data} = await axios(base_url)\n\n}\n\nasync function updatePost(post: Post): Promise<Post> {\n    // update a existing post\n    // [TODO] remove this return to use a fetch API\n    return {\n        id: 1,\n        title: 'title',\n        userId: 1,\n        body: 'body',\n        postImageUrl: 'https://picsum.photos/1280/960',\n    }\n}\n\nasync function deletePost(postID: Post['id']): Promise<Post['id']> {\n    // delete a existing post\n    // [TODO] remove this return to use a fetch API\n    return 1\n}\n\nexport { getPost, getPosts, deletePost, updatePost, createPost }\n"]},"metadata":{},"sourceType":"module"}